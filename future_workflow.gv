digraph DocumentAnalysisWorkflow {
    rankdir=TB; // Top-to-Bottom layout
    splines=ortho; // Use orthogonal lines for potentially cleaner routing
    nodesep=0.8; // Increase separation between nodes vertically
    ranksep=1.5; // Increase separation between ranks (layers)

    node [fontname="Helvetica", margin=0.1]; // Default node style
    edge [fontname="Helvetica", fontsize=10]; // Default edge style

    // --- Style Definitions ---
    // Start/End Nodes
    node [shape=circle, style=filled, fillcolor="#E0E0E0"]; // Light Gray
    Start [label="Start\n(Input Content)"];
    End [label="End\n(Enrichment Set Ready\n& Outputs Saved)", shape=doublecircle, fillcolor="#D0F0C0"]; // Light Green tint

    // Agent Nodes - Grouped by Step Phase
    node [shape=box, style=filled];
    // Step 1-2 (Context Setup)
    Agent1 [label="1. DomainIdentifierAgent", fillcolor="#FFFACD"]; // LemonChiffon
    Agent2 [label="2. SubDomainIdentifierAgent", fillcolor="#FFFACD"];
    // Step 3 Agent (Topic Context) in subgraph
    // Step 4 Agents (Type ID) in subgraph
    // Step 5 Agents (Instance Extraction - NEW) in subgraph
    // Step 6 Agent (Relationship ID) in subgraph
    // Step 7-9 Agents (KARMA-inspired Enrichment)
    Agent7_SAA [label="7. SchemaAlignmentAgent\n(KARMA Inspired)", fillcolor="#FFDAB9"]; // PeachPuff
    Agent8_CRA [label="8. ConflictResolutionAgent\n(KARMA Inspired)", fillcolor="#DDA0DD"]; // Plum
    Agent9_EA [label="9. EvaluatorAgent\n(KARMA Inspired)", fillcolor="#B0E0E6"]; // PowderBlue

    // Data Nodes - Ellipses, distinct colors for intermediate vs. final enrichment data
    node [shape=ellipse, style=filled, fillcolor="#F5F5F5"]; // WhiteSmoke for intermediate outputs
    Data_Domain [label="DomainSchema (1)"];
    Data_SubDomains [label="SubDomainSchema (2)"];
    Data_Topics [label="TopicSchema (3)\n(Aggregated)"];
    Data_EntityTypes [label="EntityTypeSchema (4a)"];
    Data_OntologyTypes [label="OntologyTypeSchema (4b)"];
    Data_EventTypes [label="EventSchema (4c)"];
    Data_StatementTypes [label="StatementTypeSchema (4d)"];
    Data_EvidenceTypes [label="EvidenceTypeSchema (4e)"];
    Data_MeasurementTypes [label="MeasurementTypeSchema (4f)"];
    Data_ModalityTypes [label="ModalityTypeSchema (4g)"];
    Data_ExtractedInstances [label="Extracted Instances (5)\n(Entities, Events, Evidence,\nMeasurements, Modalities, etc.)", fillcolor="#E0FFFF"]; // LightCyan for extracted data
    Data_Relationships [label="RelationshipSchema (6)\n(Aggregated)"];

    // New Data Nodes for KARMA-inspired steps
    Data_ExistingSchemaGraph [label="Existing\nKnowledge Schema/Graph", shape=cylinder, fillcolor="#B0C4DE"]; // LightSteelBlue cylinder
    Data_AlignedCandidates [label="Aligned Candidate\nInstances/Relationships (7)", fillcolor="#FFE4E1"]; // MistyRose
    Data_VerifiedTriplets [label="Verified/Resolved\nExtractions (8)", fillcolor="#E6E6FA"]; // Lavender
    Data_FinalEnrichmentSet [label="Final Enrichment Set (9)\n(Triplets/Facts)", fillcolor="#90EE90", shape=Mrecord]; // LightGreen, record shape


    // --- Subgraphs for Parallel Steps ---

    subgraph cluster_step3 {
        label = "Step 3: Topic ID (Parallel per Sub-Domain)"; // Node label, keep 'label'
        style=dashed; bgcolor="#FFFFE0"; // LightYellow
        node [shape=box, style=filled, fillcolor="#FFEC8B"]; // LightGoldenrod
        Agent3 [label="TopicIdentifierAgent"]; // Node label, keep 'label'
    }

    subgraph cluster_step4 {
        label = "Step 4: Type ID (Parallel)"; // Node label, keep 'label'
        style=dashed; bgcolor="#E0FFFF"; // LightCyan background
        node [shape=box, style=filled, fillcolor="#ADD8E6"]; // LightBlue agents
        Agent4a [label="4a. EntityType\nIdentifierAgent"]; // Node label, keep 'label'
        Agent4b [label="4b. OntologyType\nIdentifierAgent"]; // Node label, keep 'label'
        Agent4c [label="4c. EventType\nIdentifierAgent"]; // Node label, keep 'label'
        Agent4d [label="4d. StatementType\nIdentifierAgent"]; // Node label, keep 'label'
        Agent4e [label="4e. EvidenceType\nIdentifierAgent"]; // Node label, keep 'label'
        Agent4f [label="4f. MeasurementType\nIdentifierAgent"]; // Node label, keep 'label'
        Agent4g [label="4g. ModalityType\nIdentifierAgent"]; // Node label, keep 'label'
    }

    // UPDATED Subgraph for Step 5 (Parallel Instance Extraction)
    subgraph cluster_step5_extraction {
        label = "Step 5: Instance Extraction (Parallel per Type Category)"; // Node label, keep 'label'
        style=dashed; bgcolor="#D2EAF3"; // Pale Blue background
        node [shape=box, style=filled, fillcolor="#AEEEEE"]; // Pale Turquoise agents
        Agent5a [label="5a. EntityInstance\nExtractorAgent"]; // Node label, keep 'label'
        Agent5b [label="5b. OntologyInstance\nExtractorAgent"]; // Node label, keep 'label'
        Agent5c [label="5c. EventInstance\nExtractorAgent"]; // Node label, keep 'label'
        Agent5d [label="5d. StatementInstance\nExtractorAgent"]; // Node label, keep 'label'
        Agent5e [label="5e. EvidenceInstance\nExtractorAgent"]; // Node label, keep 'label'
        Agent5f [label="5f. MeasurementInstance\nExtractorAgent"]; // Node label, keep 'label'
        Agent5g [label="5g. ModalityInstance\nExtractorAgent"]; // Node label, keep 'label'
    }


    subgraph cluster_step6 {
        label = "Step 6: Relationship ID (Parallel per Entity Type)"; // Node label, keep 'label'
        style=dashed; bgcolor="#E0FFE0"; // Honeydew
        node [shape=box, style=filled, fillcolor="#90EE90"]; // LightGreen
        Agent6_Rel [label="RelationshipType\nIdentifierAgent"]; // Node label, keep 'label'
    }

     // Subgraph for Step 7 (Schema Alignment)
    subgraph cluster_step7 {
        label = "Step 7: Schema Alignment (KARMA Inspired)"; // Node label, keep 'label'
        style=dashed; bgcolor="#FFEFD5"; // PapayaWhip
        // Agent7_SAA node defined above
    }

     // Subgraph for Step 8 (Conflict Resolution)
    subgraph cluster_step8 {
        label = "Step 8: Conflict Resolution (KARMA Inspired)"; // Node label, keep 'label'
        style=dashed; bgcolor="#FFE4E1"; // MistyRose background
         // Agent8_CRA node defined above
    }

     // Subgraph for Step 9 (Evaluation)
    subgraph cluster_step9 {
        label = "Step 9: Evaluation & Filtering (KARMA Inspired)"; // Node label, keep 'label'
        style=dashed; bgcolor="#F0F8FF"; // AliceBlue background
        // Agent9_EA node defined above
    }


    // --- Workflow Edges ---
    edge [style=solid, color=black, constraint=true]; // Restore default edge style

    // Step 1 -> 2 -> 3 (Context Building)
    Start -> Agent1 [xlabel=" content"]; // USE xlabel
    Agent1 -> Data_Domain [xlabel=" output"]; // USE xlabel
    Data_Domain -> Agent2 [xlabel=" primary_domain"]; // USE xlabel
    Start -> Agent2 [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent2 -> Data_SubDomains [xlabel=" output"]; // USE xlabel
    Data_SubDomains -> Agent3 [xlabel=" sub_domain list"]; // USE xlabel
    Data_Domain -> Agent3 [xlabel=" primary_domain", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent3 [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent3 -> Data_Topics [xlabel=" output (Aggregated)"]; // USE xlabel

    // Step 4 (Type Identification) -> Outputs
    Data_Topics -> Agent4a [xlabel=" context (domain, subdomains, topics)"]; // USE xlabel
    Start -> Agent4a [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent4a -> Data_EntityTypes [xlabel=" identified types"]; // USE xlabel
    Data_Topics -> Agent4b [xlabel=" context"]; Start -> Agent4b [xlabel=" content", style=dashed, constraint=false]; // USE xlabel (x2)
    Agent4b -> Data_OntologyTypes [xlabel=" identified types"]; // USE xlabel
    Data_Topics -> Agent4c [xlabel=" context"]; Start -> Agent4c [xlabel=" content", style=dashed, constraint=false]; // USE xlabel (x2)
    Agent4c -> Data_EventTypes [xlabel=" identified types"]; // USE xlabel
    Data_Topics -> Agent4d [xlabel=" context"]; Start -> Agent4d [xlabel=" content", style=dashed, constraint=false]; // USE xlabel (x2)
    Agent4d -> Data_StatementTypes [xlabel=" identified types"]; // USE xlabel
    Data_Topics -> Agent4e [xlabel=" context"]; Start -> Agent4e [xlabel=" content", style=dashed, constraint=false]; // USE xlabel (x2)
    Agent4e -> Data_EvidenceTypes [xlabel=" identified types"]; // USE xlabel
    Data_Topics -> Agent4f [xlabel=" context"]; Start -> Agent4f [xlabel=" content", style=dashed, constraint=false]; // USE xlabel (x2)
    Agent4f -> Data_MeasurementTypes [xlabel=" identified types"]; // USE xlabel
    Data_Topics -> Agent4g [xlabel=" context"]; Start -> Agent4g [xlabel=" content", style=dashed, constraint=false]; // USE xlabel (x2)
    Agent4g -> Data_ModalityTypes [xlabel=" identified types"]; // USE xlabel

    // Step 5 (Instance Extraction - Parallel) -> Aggregated Instances
    // Takes Type Schemas from Step 4 + Context + Content
    Data_EntityTypes -> Agent5a [xlabel=" entity types"]; // USE xlabel
    Data_Topics -> Agent5a [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent5a [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent5a -> Data_ExtractedInstances [xlabel=" entity instances"]; // USE xlabel

    Data_OntologyTypes -> Agent5b [xlabel=" ontology types"]; // USE xlabel
    Data_Topics -> Agent5b [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent5b [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent5b -> Data_ExtractedInstances [xlabel=" ontology instances"]; // USE xlabel

    Data_EventTypes -> Agent5c [xlabel=" event types"]; // USE xlabel
    Data_Topics -> Agent5c [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent5c [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent5c -> Data_ExtractedInstances [xlabel=" event instances"]; // USE xlabel

    Data_StatementTypes -> Agent5d [xlabel=" statement types"]; // USE xlabel
    Data_Topics -> Agent5d [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent5d [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent5d -> Data_ExtractedInstances [xlabel=" statement instances"]; // USE xlabel

    Data_EvidenceTypes -> Agent5e [xlabel=" evidence types"]; // USE xlabel
    Data_Topics -> Agent5e [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent5e [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent5e -> Data_ExtractedInstances [xlabel=" evidence instances"]; // USE xlabel

    Data_MeasurementTypes -> Agent5f [xlabel=" measurement types"]; // USE xlabel
    Data_Topics -> Agent5f [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent5f [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent5f -> Data_ExtractedInstances [xlabel=" measurement instances"]; // USE xlabel

    Data_ModalityTypes -> Agent5g [xlabel=" modality types"]; // USE xlabel
    Data_Topics -> Agent5g [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent5g [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent5g -> Data_ExtractedInstances [xlabel=" modality instances"]; // USE xlabel

    // Step 6 (Relationship ID - Parallel) -> Relationships
    // Takes Entity Types (from Step 4), Instances (from Step 5), Context, Content
    Data_EntityTypes -> Agent6_Rel [xlabel=" entity types\n(for focus)"]; // USE xlabel
    Data_ExtractedInstances -> Agent6_Rel [xlabel=" extracted instances\n(potential participants)", style=dashed, constraint=false]; // USE xlabel
    Data_Topics -> Agent6_Rel [xlabel=" context", style=dashed, constraint=false]; // USE xlabel
    Start -> Agent6_Rel [xlabel=" content", style=dashed, constraint=false]; // USE xlabel
    Agent6_Rel -> Data_Relationships [xlabel=" output (Aggregated)"]; // USE xlabel

    // Step 7 (Schema Alignment)
    Data_ExtractedInstances -> Agent7_SAA [xlabel=" extracted instances"]; // USE xlabel
    Data_Relationships -> Agent7_SAA [xlabel=" identified relationships"]; // USE xlabel
    Data_ExistingSchemaGraph -> Agent7_SAA [xlabel=" target schema"]; // USE xlabel
    Agent7_SAA -> Data_AlignedCandidates [xlabel=" output"]; // USE xlabel

    // Step 8 (Conflict Resolution)
    Data_AlignedCandidates -> Agent8_CRA [xlabel=" aligned candidates"]; // USE xlabel
    Data_ExistingSchemaGraph -> Agent8_CRA [xlabel=" existing facts"]; // USE xlabel
    Agent8_CRA -> Data_VerifiedTriplets [xlabel=" output"]; // USE xlabel

    // Step 9 (Evaluation)
    Data_VerifiedTriplets -> Agent9_EA [xlabel=" verified extractions"]; // USE xlabel
    Agent9_EA -> Data_FinalEnrichmentSet [xlabel=" output"]; // USE xlabel

    // Final Output (Enrichment Set) to End
    Data_FinalEnrichmentSet -> End [xlabel=" final results\nfor enrichment"]; // USE xlabel

    // Connections to End Node (Intermediate Outputs Saved) - Dashed Gray
    // No labels needed for these purely visual connections indicating output saving
    Data_Domain -> End [style=dashed, constraint=false, color=gray];
    Data_SubDomains -> End [style=dashed, constraint=false, color=gray];
    Data_Topics -> End [style=dashed, constraint=false, color=gray];
    Data_EntityTypes -> End [style=dashed, constraint=false, color=gray];
    Data_OntologyTypes -> End [style=dashed, constraint=false, color=gray];
    Data_EventTypes -> End [style=dashed, constraint=false, color=gray];
    Data_StatementTypes -> End [style=dashed, constraint=false, color=gray];
    Data_EvidenceTypes -> End [style=dashed, constraint=false, color=gray];
    Data_MeasurementTypes -> End [style=dashed, constraint=false, color=gray];
    Data_ModalityTypes -> End [style=dashed, constraint=false, color=gray];
    Data_ExtractedInstances -> End [style=dashed, constraint=false, color=gray];
    Data_Relationships -> End [style=dashed, constraint=false, color=gray];


     // --- Visual Rank Alignment Constraints ---
     // (These constraints help with visual layout and don't affect labels)
     { rank=same; Agent1; Data_Domain; }
     { rank=same; Agent2; Data_SubDomains; }
     { rank=same; Data_EntityTypes; Data_OntologyTypes; Data_EventTypes; Data_StatementTypes; Data_EvidenceTypes; Data_MeasurementTypes; Data_ModalityTypes; } // Align Step 4 outputs
     { rank=same; Agent7_SAA; Data_AlignedCandidates; Data_ExistingSchemaGraph;} // Align SAA and its output/input
     { rank=same; Agent8_CRA; Data_VerifiedTriplets; }
     { rank=same; Agent9_EA; Data_FinalEnrichmentSet; }

}